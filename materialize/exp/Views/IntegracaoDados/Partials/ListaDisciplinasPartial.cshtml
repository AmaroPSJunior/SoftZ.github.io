@using System.Text.RegularExpressions
@model List<SLCONSTRUCT.UI.WEB.ViewModels.ListaDisciplinasVModel>

@{
    var updown = ViewBag.ascdesc == "desc" ? "sort-asc fa-angle-up" : "sort-desc fa-angle-down";
    int qtdresgistros = ViewBag.qtdresgistros;
    int paginaatual = ViewBag.paginaatual;
    int qtdpaginas = ViewBag.qtdpaginas;
    bool seanterior = ViewBag.seanterior;
    bool seproximo = ViewBag.seproximo;
}


@Html.Hidden("qtdresgistros", qtdresgistros)
@Html.Hidden("paginaatual", paginaatual)
@Html.Hidden("qtdpaginas", qtdpaginas)
@Html.Hidden("seanterior", seanterior)
@Html.Hidden("seproximo", seproximo)

<div class="grid integ">
    <table class="bordered highlight">
        <thead>
            <tr>
                <th class="ordena" data-campo="datahora">
                    data <i class="fa @(ViewBag.orderby == "datahora" ? updown : "")" aria-hidden="true"></i>
                </th>
                <th class="ordena" data-campo="course_id">
                    course_id <i class="fa @(ViewBag.orderby == "course_id" ? updown : "")" aria-hidden="true"></i>
                </th>
                <th class="ordena" data-campo="long_name">
                    long_name <i class="fa @(ViewBag.orderby == "long_name" ? updown : "")" aria-hidden="true"></i>
                </th>
                <th class="ordena" data-campo="account_id">
                    account_id <i class="fa @(ViewBag.orderby == "account_id" ? updown : "")" aria-hidden="true"></i>
                </th>
                <th class="ordena" data-campo="term_id">
                    term_id <i class="fa @(ViewBag.orderby == "term_id" ? updown : "")" aria-hidden="true"></i>
                </th>
                <th class="ordena" data-campo="course_format">
                    course_format <i class="fa @(ViewBag.orderby == "course_format" ? updown : "")" aria-hidden="true"></i>
                </th>
                <th class="ordena" data-campo="status" style="width: 120px;">
                    status <i class="fa @(ViewBag.orderby == "status" ? updown : "")" aria-hidden="true"></i>
                </th>
                <th class="ordena" data-campo="env_canvas" style="width: 120px;">
                    env. p/ canvas <i class="fa @(ViewBag.orderby == "env_canvas" ? updown : "")" aria-hidden="true"></i>
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                if (Model.Count() > 0)
                {
                    Regex rg = new Regex(@"^\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$");
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.datahora</td>
                            <td class="@(string.IsNullOrEmpty(item.course_id) ? "error" : "")">@Html.DisplayFor(x => item.course_id)</td>
                            <td class="@(string.IsNullOrEmpty(item.long_name) ? "error" : "")">@Html.DisplayFor(x => item.long_name)</td>
                            <td>@item.account_id</td>
                            <td class="@(string.IsNullOrEmpty(item.term_id) ? "warning" : "")">@Html.DisplayFor(x => item.term_id)</td>
                            <td>@item.course_format</td>
                            <td>
                                @item.status
                                @if ((!string.IsNullOrEmpty(item.status)) && (item.status.Trim() == "active" || item.status.Trim() == "deleted"))
                                {
                                    <i class="fa fa-info tooltipped" aria-hidden="true" data-position="top" data-delay="50"
                                       data-tooltip="@(item.status.Trim() == "active" ? "Usuário ativo no College" : "Usuário bloqueado no College")"></i>
                                }
                            </td>
                            <td>
                                @(item.env_canvas == true ? "sim" : "não")
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="8">Nenhum registro encontrado</td></tr>
                }
            }

        </tbody>
    </table>

    <div class="row cmp-filtro-avancado no-margin right filtro-avancado ">
        <div class="col s12 pagination botoes-paginacao ">
            @if (!seanterior)
            {
                <button class="disabled btn inicio hide-on-small-only shadow"><i class="fas fa-angle-double-left black-text" aria-hidden="true"></i></button>
                <button class="disabled btn anterior shadow"><i class="fas fa-angle-left black-text" aria-hidden="true"></i></button>
            }
            else
            {
                <button class="btn waves-effect inicio hide-on-small-only paginacao shadow" data-pagina="1"><i class="fas fa-angle-double-left black-text" aria-hidden="true"></i></button>
                <button class="btn waves-effect paginacao anterior shadow" data-pagina="@(paginaatual - 1)"><i class="fas fa-angle-left black-text" aria-hidden="true"></i></button>
            }

            <span>@(paginaatual)/@(qtdpaginas)</span>

            @if (!seproximo)
            {
                <button class="disabled btn hide-on-small-only proximo shadow"><i class="fas fa-angle-right black-text" aria-hidden="true"></i></button>
                <button class="disabled btn hide-on-small-only shadow "><i class="fas fa-angle-double-right black-text" aria-hidden="true"></i></button>
            }
            else
            {
                <button class="btn hide-on-small-only waves-effect paginacao shadow" data-pagina="@(paginaatual + 1)"><i class="fas fa-angle-right black-text" aria-hidden="true"></i></button>
                <button class="btn hide-on-small-only waves-effect paginacao proximo shadow" data-pagina="@(qtdpaginas)"><i class="fas fa-angle-double-right black-text" aria-hidden="true"></i></button>
            }
        </div>
    </div>


</div>
