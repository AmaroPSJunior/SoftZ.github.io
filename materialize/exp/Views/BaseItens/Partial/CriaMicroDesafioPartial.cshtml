@using SLCONSTRUCT.UI.WEB.ViewModels;
@model SLCONSTRUCT.UI.WEB.ViewModels.MicroDesafioVModel

@{
    var textoUaVinculada = Model.uavinculada ? "(Questão Vinculada À Uma Unidade de Aprendizagem)" : "";
}

@using (Html.BeginForm("SalvarComMatriz", "MicroDesafio", FormMethod.Post, new { data_js = "form-validate", id = "frmCadastroMicro" }))
{
    @Html.HiddenFor(x => x.coditem)
    @Html.HiddenFor(x => x.codbaseunidadeaprendizagem, new { @required = "required" })
    @Html.HiddenFor(x => x.Enunciado, new { @required = "required" })
    @Html.Hidden("qtdOpcoesRespostaEscolhida", Model.alternativas.Count())

    @Html.HiddenFor(x => x.caminhoimagemCkeditor)
    @Html.HiddenFor(x => x.base64imagemCkeditor)
    @Html.HiddenFor(x => x.extensaoimagemCkeditor)
    @Html.Hidden("uavinculada", Model.uavinculada)

    <div class="modal-header">
        <p class="titulo-modal">Banco de Questões <i class="fas fa-angle-right" aria-hidden="true"></i> Criar Micro Desafio @textoUaVinculada</p>
        <span class="id-questao">
            @{var idQuestao = "Id questão: ";}

            @if (Model.coditem > 0)
            {
                @idQuestao @Model.coditem
            }
        </span>
        <span class="modal-close-default-sl modal-close">fechar <i class="fas fa-window-close" aria-hidden="true"></i></span>
    </div>
    <div class="modal-content">
        <div class="row">
            <div class="col s12">
                <ul class="tabs">
                    <li class="tab col s3 "><a class="active" href="#cadastro-">Geral</a></li>
                    <li class="tab col s3 disabled"><a href="#listagem-">Classificação</a></li>
                    <button type="button" class="btn waves-effect waves-light criar-novo-micro hide">Criar novo</button>
                </ul>
            </div>
        </div>

        <div id="cadastro-" class="col s12 cadastro">
            @Html.HiddenFor(x => x.desativado)
            <div class="somente-bq hide">
                <div class="input-field col l6">
                    @Html.DropDownListFor(x => x.Banca, Model.BancaList, new { @required = "required" })
                    <label>Banca</label>
                </div>
                <div class="input-field col l6">
                    @Html.DropDownListFor(x => x.Autor, Model.AutorList, new { @required = "required" })
                    <label>Autor</label>
                </div>
            </div>
            <div class="input-field col l12">
                @Html.TextBoxFor(x => x.TituloQuestao, new { @required = "required" })
                <label>Título da questão</label>
            </div>
            <div class="input-field col l12">
                <span class="input-title-div">Enunciado</span>
                <textarea name="editormicro" id="editormicro" rows="10" cols="80">@Model.Enunciado</textarea>
                <script>
                    CKEDITOR.replace('editormicro');
                </script>
            </div>
            <div class="file-field input-field col l12" style="text-align:right;">
                <div class="btn">
                    <span>Anexar Imagem</span>
                    @Html.TextBoxFor(x => x.caminhoimagemCkeditor, new { @class = "validate anexa-img", @accept = "image/jpeg", @type = "file" })
                </div>
                <div class="file-path-wrapper">
                    <label>@Html.TextBoxFor(x => x.caminhoimagemCkeditor, new { @class = "active file-path validate", @placeholder = "Anexar imagem" })</label>
                </div>
            </div>
            <div class="input-field col l7">
                <select id="qtdOpcoesResposta" name="qtdealternativas" required="required" data-val-required="Dificuldade é um campo obrigatório.">
                    <option value="2">2</option>
                    <option value="3">3</option>
                    <option value="4">4</option>
                    <option value="5" selected>5</option>
                </select>
                <label>Qtd. Opções de resposta</label>
            </div>
            <div id="espacoQuestoes">
                @for (int i = 1; i <= 5; i++)
                {
                    var alternativa = new AlternativaVModel();
                    var desabilitado = "";
                    var classeQuestao = "";

                    if (Model.alternativas.Count() >= i)
                    {
                        alternativa = Model.alternativas[i - 1];
                    }
                    else
                    {
                        desabilitado = "disabled='disabled'";
                        classeQuestao = "hide";
                    }
                    <div class="questao-unitario col s12 no-padding @(classeQuestao)">
                        <input type="hidden" class="coditemalternativa" name="alternativas[@(i - 1)].coditemalternativa" @(desabilitado) value="@alternativa.coditemalternativa" />
                        <input type="hidden" class="coditem" name="alternativas[@(i - 1)].coditem" @(desabilitado) value="@alternativa.coditem" />
                        <input type="hidden" class="correta" name="alternativas[@(i - 1)].correta" @(desabilitado) value="@(i == 1 ? "true" : "false")" />
                        <input type="hidden" class="descricao" name="alternativas[@(i - 1)].descricao" @(desabilitado) />
                        <input type="hidden" class="justificativa" name="alternativas[@(i - 1)].justificativa" @(desabilitado) />
                        <input type="hidden" class="ordem" name="alternativas[@(i - 1)].ordem" @(desabilitado) value="@alternativa.ordem" />
                        <div class="input-field col l12 alternativa">
                            <div class="head-alt">
                                <span class="input-title-div"> Alternativa 0@(i)</span>
                                @if (i == 1)
                                {
                                    <div class="input-title-div"><div class="alt-correta-verde"></div><i class="fas fa-circle font-verde" aria-hidden="true"></i> Correta</div>
                                }
                                else
                                {
                                    <div class="input-title-div"><i class="fas fa-circle font-vermelho" aria-hidden="true"></i> Incorreta</div>
                                }
                            </div>
                            <textarea name="editor-micro@(i)" id="editor-micro@(i)" rows="10" cols="80">@alternativa.descricao</textarea>
                            <script>
                                CKEDITOR.replace('editor-micro@(i)');
                            </script>
                        </div>
                        <div class="file-field input-field col l12" style="text-align:right;">
                            <div class="btn">
                                <span>Anexar Imagem</span>
                                <input id="caminhoImagemAlternativa_@(i)" name="caminhoImagemAlternativa_@(i)" type="file" class="validate anexa-img" accept="image/jpeg" />
                            </div>
                            <div class="file-path-wrapper">
                                <label><input id="caminhoImagemAlternativa_@(i)" name="caminhoImagemAlternativa_@(i)" class="active file-path validate" placeholder="Anexar imagem" /></label>
                            </div>
                        </div>

                        <div class="input-field col l12 feedback">
                            <span class="input-title-div">FeedBack</span>
                            <textarea name="editor-micro-alternativa@(i)" id="editor-micro-alternativa@(i)" rows="10" cols="80">@alternativa.justificativa</textarea>
                            <script>
                        CKEDITOR.replace('editor-micro-alternativa@(i)');
                        CKEDITOR.instances['editor-micro-alternativa@(i)'].config.height = 100;
                            </script>
                        </div>

                        <div class="file-field input-field col l12" style="text-align:right;">
                            <div class="btn">
                                <span>Anexar Imagem</span>
                                <input id="caminhoImagemFeedback_@(i)" name="caminhoImagemFeedback_@(i)" type="file" class="validate anexa-img" accept="image/jpeg" />
                            </div>
                            <div class="file-path-wrapper">
                                <label><input id="caminhoImagemFeedback_@(i)" name="caminhoImagemFeedback_@(i)" class="active file-path validate" placeholder="Anexar imagem" /></label>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="col s12 no-padding">
                <div class="input-field col l12">
                    @Html.DropDownListFor(x => x.Dificuldade, Model.DificuldadeList, new { @required = "required" })
                    <label>Nível de dificuldade</label>
                </div>
            </div>
        </div>

        <div id="listagem-" class="listagem col s12">
            <div class="input-field col l6" data-codeixo="@Model.Eixo">
                @*<select>
                    <option value="0">São Lucas</option>
                </select>*@

                @Html.DropDownListFor(x => x.Eixo, Model.EixoList, "São Lucas", new { @required = "required" })
                <label>Eixo</label>
            </div>
            <div class="input-field col l6">
                @Html.DropDownListFor(x => x.Curso, Model.CursoList, "Selecione")
                <label>Curso</label>
            </div>
            <div class="input-field col l6">
                @Html.DropDownListFor(x => x.Disciplina, Model.DisciplinaList, "Selecione")
                <label>Disciplina</label>
            </div>

            <div class="input-field col l6">
                @Html.DropDownListFor(x => x.Habilidade, Model.HabilidadeList)
                <label>Habilidade</label>
            </div>
            <div class="input-field col l12">
                @Html.DropDownListFor(x => x.Descritor, Model.DescritorList)
                <label>Descritor</label>
            </div>
            <div class="col l12">
                <button type="button" class="btn waves-effect waves-light right salva-item-matriz">Salvar</button>
            </div>
            <div class="col l12 listItemMatriz">
                @* Local onde será injetada esta parcial via método AJAX *@
                @*@Html.Partial("~/Views/BaseItens/Partial/ListagemMatrizModalPartial.cshtml")*@
            </div>
        </div>
    </div>
    <div class="modal-footer">

        <div class="status-desativado hide" data-status="@Model.desativado">
            
            <label for="dropdown1" class="left">Status:</label>
                
            @if (@Model.desativado)
            {
                <a class='dropdown-button inativa' href='#' data-activates='dropdown1'>
                    <i class="fas fa-circle"></i>
                    Inativo
                </a>
            }
            else
            {
                <a class='dropdown-button ativa' href='#' data-activates='dropdown1'>
                    <i class="fas fa-circle"></i>
                    Ativo
                </a>
            }
               
            <ul id='dropdown1' class='dropdown-content'>
                <li class="ativa"><i class="fas fa-circle"></i>Ativa</li>
                <li class="inativa"><i class="fas fa-circle"></i>Inativo</li>
            </ul>
        </div>

        <button class="btn btn-salva-default" type="button" onclick="Helper.validateCKEditor('editormicro'); Helper.validarRespostasMicro(); $('#frmCadastroMicro').valid();">Adicionar</button>
    </div>
}

<script type="text/javascript">
    setTimeout(() => {
        if (($("#frmCadastroMicro #uavinculada") && $("#frmCadastroMicro #uavinculada").val() && JSON.parse($("#frmCadastroMicro #uavinculada").val().toLowerCase())) || !JSON.parse(permissaoGravacao.toLowerCase())) {
            $(".cadastro div *").prop('disabled', true);
            $(".btn-salva-default").prop('disabled', true);

            for (var instance in CKEDITOR.instances) {
                if (instance.toUpperCase().indexOf("MICRO") > -1) {
                    CKEDITOR.instances[instance].document.getBody().setAttribute('contenteditable', false);
                }
            }
        } else {
            $(".cadastro div *").prop('disabled', false);
            $(".btn-salva-default").prop('disabled', false);

            for (var instance in CKEDITOR.instances) {
                if (instance.toUpperCase().indexOf("MICRO") > -1) {
                    CKEDITOR.instances[instance].document.getBody().setAttribute('contenteditable', true);
                }
            }
        }
    }, 1500);

</script>

