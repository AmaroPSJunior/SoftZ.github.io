@model SLCONSTRUCT.UI.WEB.ViewModels.MicroDesafioVModel

@using (Html.BeginForm("Salvar", "CadastroMicroDesafioPartial", FormMethod.Post, new { data_js = "form-validate", id = "frmCadastroMicroDesafio" }))
{
    @Html.HiddenFor(x => x.codbaseunidadeaprendizagem)

    <div class="modal-header">
        <h4 class="titulo-modal-default-sl">MICRODESAFIO</h4>
        <span class="modal-close-default-sl modal-close">fechar <i class="fas fa-window-close" aria-hidden="true"></i></span>
    </div>

    <div class="modal-content">

        <div class="col l3 iconmargin">
            <i class="fas fa-pen-square icon-padrao circular items" aria-hidden="true"></i><h2 class="sl-titulo-default sl-navy-blue">MICRO</h2>
        </div>

        <div class="col l12">

            <div class="panel-collapse">
                <div class="collapsible-list">

                    @if (Model.listaHabilidade.Count() > 0)
                    {
                        <ul class="collapsible" data-collapsible="expandable">

                            @for (int i = 0; i < Model.listaHabilidade.Count(); i++)
                            {
                                <li>

                                    <div class="collapsible-header">@Model.listaHabilidade[i].HABILIDADE</div>
                                    <div class="collapsible-body ground">

                                        <ul class="collapsible dentro" data-collapsible="accordion">

                                            @for (int x = 0; x < Model.listaDescritor.Count(); x++)
                                            {
                                                if (Model.listaHabilidade[i].CODIGOHABILIDADE == Model.listaDescritor[x].CODIGOHABILIDADE)
                                                {
                                                    <li>
                                                        <div class="collapsible-header posisao itemmicro" data-autortexto="@Model.AutorList.First().Text" data-codautor="@Model.AutorList.First().Value" data-bancatext="@Model.BancaList.First().Text" data-codbanca="@Model.BancaList.First().Value" data-cursotexto="@Model.listaHabilidade[i].CURSO" data-codcurso="@Model.listaHabilidade[i].CODIGOCURSO" data-disciplinatexto="@Model.listaHabilidade[i].DISCIPLINA" data-habilidadetexto="@Model.listaHabilidade[i].HABILIDADE" data-descritortexto="@Model.listaDescritor[x].DESCRITOR" data-codhabilidade="@Model.listaDescritor[x].CODIGOHABILIDADE" data-coddisciplina="@Model.listaHabilidade[i].CODIGODISCIPLINA" data-codunidadeensino="@Model.listaHabilidade[i].CODIGOUNIDADEENSINO" data-coddescritor="@Model.listaDescritor[x].CODIGODESCRITOR">@Model.listaDescritor[x].DESCRITOR</div>
                                                        <div class="collapsible-body">

                                                            <div class="griditem">
                                                                @* chama grid item *@ 
                                                            </div>

                                                        </div>
                                                    </li>
                                                }
                                            }

                                        </ul>

                                    </div>
                                </li>
                            }

                        </ul>
                    }
                </div>
            </div>
        </div>
    </div>
}

